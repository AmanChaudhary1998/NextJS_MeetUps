{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Aman\\\\Newfolder\\\\React.js\\\\Next.js\\\\project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport Head from 'next/head';\n\nconst MeetupInfo = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.dataLists.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      image: props.dataLists.image,\n      id: props.dataLists.id,\n      title: props.dataLists.title,\n      address: props.dataLists.address,\n      description: props.dataLists.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://aman001:aman28@mycluster.o3hq5.mongodb.net/nextjs?retryWrites=true&w=majority');\n  const connectDB = client.db();\n  const meetupCollections = connectDB.collection('meetups');\n  const meetups = await meetupCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => {\n      return {\n        params: {\n          meetupId: meetup._id.toString()\n        }\n      };\n    })\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://aman001:aman28@mycluster.o3hq5.mongodb.net/nextjs?retryWrites=true&w=majority');\n  const connectDB = client.db();\n  const meetupCollections = connectDB.collection('meetups');\n  const selectMeetup = await meetupCollections.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close(); // fetch the data from API\n\n  return {\n    props: {\n      dataLists: {\n        id: selectMeetup._id.toString(),\n        image: selectMeetup.image,\n        title: selectMeetup.title,\n        address: selectMeetup.address,\n        description: selectMeetup.description\n      }\n    }\n  };\n};\nexport default MeetupInfo;","map":{"version":3,"sources":["E:/Aman/Newfolder/React.js/Next.js/project/pages/[meetupId]/index.js"],"names":["MeetupDetails","MongoClient","ObjectId","Head","MeetupInfo","props","dataLists","title","image","id","address","description","getStaticPaths","client","connect","connectDB","db","meetupCollections","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectMeetup","findOne"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;AAEA,SAAQC,WAAR,EAAoBC,QAApB,QAAmC,SAAnC;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,sBACI;AAAA,4BACA,QAAC,IAAD;AAAA,6BACI;AAAA,kBAAQA,KAAK,CAACC,SAAN,CAAgBC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,aAAD;AACI,MAAA,KAAK,EAAEF,KAAK,CAACC,SAAN,CAAgBE,KAD3B;AAEI,MAAA,EAAE,EAAEH,KAAK,CAACC,SAAN,CAAgBG,EAFxB;AAGI,MAAA,KAAK,EAAEJ,KAAK,CAACC,SAAN,CAAgBC,KAH3B;AAII,MAAA,OAAO,EAAEF,KAAK,CAACC,SAAN,CAAgBI,OAJ7B;AAKI,MAAA,WAAW,EAAEL,KAAK,CAACC,SAAN,CAAgBK;AALjC;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADJ;AAcH,CAfD;;AAiBA,OAAO,MAAMC,cAAc,GAAG,YAAY;AAEtC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,6FAApB,CAArB;AAEA,QAAMC,SAAS,GAAGF,MAAM,CAACG,EAAP,EAAlB;AAEA,QAAMC,iBAAiB,GAAGF,SAAS,CAACG,UAAV,CAAqB,SAArB,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAtB;AAEAT,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAM;AACFC,IAAAA,QAAQ,EAAC,KADP;AAEFC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAU;AACxB,aAAM;AACFC,QAAAA,MAAM,EAAC;AACHC,UAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADP;AADL,OAAN;AAKH,KANK;AAFJ,GAAN;AAUH,CAtBM;AAwBP,OAAO,MAAMC,cAAc,GAAG,MAAMC,OAAN,IAAiB;AAE3C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMhB,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,6FAApB,CAArB;AAEA,QAAMC,SAAS,GAAGF,MAAM,CAACG,EAAP,EAAlB;AAEA,QAAMC,iBAAiB,GAAGF,SAAS,CAACG,UAAV,CAAqB,SAArB,CAA1B;AAEA,QAAMe,YAAY,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAEnB,QAAQ,CAAC2B,QAAD;AAAd,GAA1B,CAA3B;AAEAhB,EAAAA,MAAM,CAACU,KAAP,GAZ2C,CAa3C;;AACA,SAAM;AACFlB,IAAAA,KAAK,EAAC;AACFC,MAAAA,SAAS,EAAC;AACNG,QAAAA,EAAE,EAACwB,YAAY,CAACZ,GAAb,CAAiBS,QAAjB,EADG;AAENtB,QAAAA,KAAK,EAACyB,YAAY,CAACzB,KAFb;AAGND,QAAAA,KAAK,EAAC0B,YAAY,CAAC1B,KAHb;AAING,QAAAA,OAAO,EAACuB,YAAY,CAACvB,OAJf;AAKNC,QAAAA,WAAW,EAACsB,YAAY,CAACtB;AALnB;AADR;AADJ,GAAN;AAWH,CAzBM;AA2BP,eAAeP,UAAf","sourcesContent":["import MeetupDetails from '../../components/meetups/MeetupDetails';\r\n\r\nimport {MongoClient,ObjectId} from 'mongodb';\r\n\r\nimport Head from 'next/head';\r\n\r\nconst MeetupInfo = (props) => {\r\n    return(\r\n        <>\r\n        <Head>\r\n            <title>{props.dataLists.title}</title>\r\n        </Head>\r\n        <MeetupDetails\r\n            image={props.dataLists.image}\r\n            id={props.dataLists.id}\r\n            title={props.dataLists.title}\r\n            address={props.dataLists.address}\r\n            description={props.dataLists.description}\r\n         />\r\n         </>\r\n    )\r\n}\r\n\r\nexport const getStaticPaths = async () => {\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://aman001:aman28@mycluster.o3hq5.mongodb.net/nextjs?retryWrites=true&w=majority');\r\n\r\n    const connectDB = client.db();\r\n\r\n    const meetupCollections = connectDB.collection('meetups');\r\n\r\n    const meetups = await meetupCollections.find({},{_id:1}).toArray();\r\n\r\n    client.close();\r\n\r\n    return{\r\n        fallback:false,\r\n        paths:meetups.map((meetup)=>{\r\n            return{\r\n                params:{\r\n                    meetupId: meetup._id.toString()\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const getStaticProps = async(context) =>{\r\n\r\n    const meetupId = context.params.meetupId;\r\n    \r\n    const client = await MongoClient.connect('mongodb+srv://aman001:aman28@mycluster.o3hq5.mongodb.net/nextjs?retryWrites=true&w=majority');\r\n\r\n    const connectDB = client.db();\r\n\r\n    const meetupCollections = connectDB.collection('meetups');\r\n\r\n    const selectMeetup = await meetupCollections.findOne({_id: ObjectId(meetupId)});\r\n\r\n    client.close();\r\n    // fetch the data from API\r\n    return{\r\n        props:{\r\n            dataLists:{\r\n                id:selectMeetup._id.toString(),\r\n                image:selectMeetup.image,\r\n                title:selectMeetup.title,\r\n                address:selectMeetup.address,\r\n                description:selectMeetup.description\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupInfo;"]},"metadata":{},"sourceType":"module"}