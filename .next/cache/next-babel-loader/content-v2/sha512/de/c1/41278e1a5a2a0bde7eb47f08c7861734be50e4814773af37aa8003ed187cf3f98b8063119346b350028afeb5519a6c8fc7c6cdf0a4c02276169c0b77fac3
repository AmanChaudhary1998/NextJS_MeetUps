{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Aman\\\\Newfolder\\\\React.js\\\\Next.js\\\\project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\nimport { MongoClient } from 'mongodb';\n\nconst MeetupInfo = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    image: props.dataLists.image,\n    id: props.dataLists.id,\n    title: props.dataLists.title,\n    address: props.dataLists.address,\n    description: props.dataLists.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://aman001:aman28@mycluster.o3hq5.mongodb.net/nextjs?retryWrites=true&w=majority');\n  const connectDB = client.db();\n  const meetupCollections = connectDB.collection('meetups');\n  const meetups = await meetupCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => {\n      return {\n        params: {\n          meetupId: meetup._id.toString()\n        }\n      };\n    })\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId; // fetch the data from API\n\n  return {\n    props: {\n      dataLists: {\n        image: 'https://elementor.com/marketing/wp-content/uploads/sites/15/2020/04/meet-coiv.png',\n        id: meetupId,\n        title: 'The First Meet',\n        address: 'woow woow yoyo',\n        description: 'This is first meet'\n      }\n    }\n  };\n};\nexport default MeetupInfo;","map":{"version":3,"sources":["E:/Aman/Newfolder/React.js/Next.js/project/pages/[meetupId]/index.js"],"names":["MeetupDetails","MongoClient","MeetupInfo","props","dataLists","image","id","title","address","description","getStaticPaths","client","connect","connectDB","db","meetupCollections","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;AAEA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,sBACI,QAAC,aAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,SAAN,CAAgBC,KAD3B;AAEI,IAAA,EAAE,EAAEF,KAAK,CAACC,SAAN,CAAgBE,EAFxB;AAGI,IAAA,KAAK,EAAEH,KAAK,CAACC,SAAN,CAAgBG,KAH3B;AAII,IAAA,OAAO,EAAEJ,KAAK,CAACC,SAAN,CAAgBI,OAJ7B;AAKI,IAAA,WAAW,EAAEL,KAAK,CAACC,SAAN,CAAgBK;AALjC;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAVD;;AAYA,OAAO,MAAMC,cAAc,GAAG,YAAY;AAEtC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,6FAApB,CAArB;AAEA,QAAMC,SAAS,GAAGF,MAAM,CAACG,EAAP,EAAlB;AAEA,QAAMC,iBAAiB,GAAGF,SAAS,CAACG,UAAV,CAAqB,SAArB,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAtB;AAEAT,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAM;AACFC,IAAAA,QAAQ,EAAC,KADP;AAEFC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAU;AACxB,aAAM;AACFC,QAAAA,MAAM,EAAC;AACHC,UAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADP;AADL,OAAN;AAKH,KANK;AAFJ,GAAN;AAUH,CAtBM;AAwBP,OAAO,MAAMC,cAAc,GAAG,MAAMC,OAAN,IAAiB;AAE3C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAF2C,CAG3C;;AACA,SAAM;AACFxB,IAAAA,KAAK,EAAC;AACFC,MAAAA,SAAS,EAAC;AACNC,QAAAA,KAAK,EAAC,mFADA;AAENC,QAAAA,EAAE,EAACqB,QAFG;AAGNpB,QAAAA,KAAK,EAAC,gBAHA;AAINC,QAAAA,OAAO,EAAC,gBAJF;AAKNC,QAAAA,WAAW,EAAC;AALN;AADR;AADJ,GAAN;AAWH,CAfM;AAiBP,eAAeP,UAAf","sourcesContent":["import MeetupDetails from '../../components/meetups/MeetupDetails';\r\n\r\nimport {MongoClient} from 'mongodb';\r\n\r\nconst MeetupInfo = (props) => {\r\n    return(\r\n        <MeetupDetails\r\n            image={props.dataLists.image}\r\n            id={props.dataLists.id}\r\n            title={props.dataLists.title}\r\n            address={props.dataLists.address}\r\n            description={props.dataLists.description}\r\n         />\r\n    )\r\n}\r\n\r\nexport const getStaticPaths = async () => {\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://aman001:aman28@mycluster.o3hq5.mongodb.net/nextjs?retryWrites=true&w=majority');\r\n\r\n    const connectDB = client.db();\r\n\r\n    const meetupCollections = connectDB.collection('meetups');\r\n\r\n    const meetups = await meetupCollections.find({},{_id:1}).toArray();\r\n\r\n    client.close()\r\n\r\n    return{\r\n        fallback:false,\r\n        paths:meetups.map((meetup)=>{\r\n            return{\r\n                params:{\r\n                    meetupId: meetup._id.toString()\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const getStaticProps = async(context) =>{\r\n\r\n    const meetupId = context.params.meetupId;\r\n    // fetch the data from API\r\n    return{\r\n        props:{\r\n            dataLists:{\r\n                image:'https://elementor.com/marketing/wp-content/uploads/sites/15/2020/04/meet-coiv.png',\r\n                id:meetupId,\r\n                title:'The First Meet',\r\n                address:'woow woow yoyo',\r\n                description:'This is first meet'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupInfo;"]},"metadata":{},"sourceType":"module"}