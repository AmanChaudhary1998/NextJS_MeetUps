{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Aman\\\\Newfolder\\\\React.js\\\\Next.js\\\\project\\\\pages\\\\index.js\",\n    _this = this;\n\nimport MeetupList from '../components/meetups/MeetupList';\nimport Head from 'next/head'; // const DUMMY_LISTS = [\n//     {\n//         id:'m1',\n//         title:'A First Meetup',\n//         image:'https://elementor.com/marketing/wp-content/uploads/sites/15/2020/04/meet-coiv.png',\n//         address:'woow address',\n//         description:'This is first meet'\n//     },\n//     {\n//         id:'m2',\n//         title:'A Second Meetup',\n//         image:'https://elementor.com/marketing/wp-content/uploads/sites/15/2020/04/meet-coiv.png',\n//         address:'yeah address',\n//         description:'This is second meet'\n//     }\n// ];\n// These method cannot be used as while the page re renders it gives the blank page as dosn't do with async \n//so to over come prefer METHOD 2\n// const HomePage = () =>{\n//     const [loadingMeetups,setLodingMeetups] = useState([]);\n//     useEffect(()=>{\n//         setLodingMeetups(DUMMY_LISTS)\n//     },[])\n//     return(\n//         <>\n//         <MeetupList meetups = {loadingMeetups} />\n//         </>\n//     )\n// }\n// Method - 2\n\nvar HomePage = function HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Next Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of NextJS based mmetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.dataLists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n}; // export const getStaticServerProps = async (context) =>{\n//     // fetch the data from API\n//     const req = context.req;\n//     const res = context.res;\n//     return{\n//         props:{\n//             dataLists:DUMMY_LISTS\n//         }\n//     };\n// };\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["E:/Aman/Newfolder/React.js/Next.js/project/pages/index.js"],"names":["MeetupList","Head","HomePage","props","dataLists"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAIA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAU;AAEvB,sBACI;AAAA,4BACA,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAKA,QAAC,UAAD;AAAY,MAAA,OAAO,EAAIA,KAAK,CAACC;AAA7B;AAAA;AAAA;AAAA;AAAA,aALA;AAAA,kBADJ;AASH,CAXD,C,CAaA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;KAvBMF,Q;;AAsDN,eAAeA,QAAf","sourcesContent":["import MeetupList from '../components/meetups/MeetupList';\r\n\r\nimport {MongoClient} from 'mongodb';\r\n\r\nimport Head from 'next/head';\r\n\r\n// const DUMMY_LISTS = [\r\n//     {\r\n//         id:'m1',\r\n//         title:'A First Meetup',\r\n//         image:'https://elementor.com/marketing/wp-content/uploads/sites/15/2020/04/meet-coiv.png',\r\n//         address:'woow address',\r\n//         description:'This is first meet'\r\n//     },\r\n//     {\r\n//         id:'m2',\r\n//         title:'A Second Meetup',\r\n//         image:'https://elementor.com/marketing/wp-content/uploads/sites/15/2020/04/meet-coiv.png',\r\n//         address:'yeah address',\r\n//         description:'This is second meet'\r\n//     }\r\n// ];\r\n\r\n\r\n// These method cannot be used as while the page re renders it gives the blank page as dosn't do with async \r\n//so to over come prefer METHOD 2\r\n\r\n// const HomePage = () =>{\r\n\r\n//     const [loadingMeetups,setLodingMeetups] = useState([]);\r\n\r\n//     useEffect(()=>{\r\n//         setLodingMeetups(DUMMY_LISTS)\r\n//     },[])\r\n\r\n//     return(\r\n//         <>\r\n//         <MeetupList meetups = {loadingMeetups} />\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// Method - 2\r\nconst HomePage = (props) =>{\r\n\r\n    return(\r\n        <>\r\n        <Head>\r\n            <title>Next Meetups</title>\r\n            <meta name=\"description\" content=\"Browse a huge list of NextJS based mmetups\" />\r\n        </Head>\r\n        <MeetupList meetups = {props.dataLists} />\r\n        </>\r\n    )\r\n}\r\n\r\n// export const getStaticServerProps = async (context) =>{\r\n//     // fetch the data from API\r\n//     const req = context.req;\r\n//     const res = context.res;\r\n\r\n//     return{\r\n//         props:{\r\n//             dataLists:DUMMY_LISTS\r\n//         }\r\n//     };\r\n// };\r\n\r\n\r\nexport const getStaticProps = async () =>{\r\n    // fetch the data from API\r\n    const client = await MongoClient.connect('mongodb+srv://aman001:aman28@mycluster.o3hq5.mongodb.net/nextjs?retryWrites=true&w=majority');\r\n\r\n    const connectDB = client.db();\r\n\r\n    const meetupCollections = connectDB.collection('meetups');\r\n\r\n    const meetups = await meetupCollections.find().toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props:{\r\n            dataLists: meetups.map((meetup)=>{\r\n                return{\r\n                    title:meetup.title,\r\n                    image:meetup.image,\r\n                    address:meetup.address,\r\n                    description:meetup.description,\r\n                    id:meetup._id.toString()\r\n                }                                 // Replace DUMMY_LISTS with meetups as fetch data from database\r\n            })\r\n        },\r\n        revalidate: 10    // with these your page will regenrated after every 10 sec so that updating reflects onto the page\r\n    };\r\n}\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}